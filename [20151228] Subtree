// http://www.lintcode.com/en/problem/subtree/


/*
新题：
这道题里判断两个节点要注意不能直接判断node是否等于node，而是要判断值是否相同，
因为节点虽然长得一样，但是仍然是不同的节点。
*/
public class Solution {
    /**
     * @param T1, T2: The roots of binary tree.
     * @return: True if T2 is a subtree of T1, or false.
     */
    public boolean isSubtree(TreeNode T1, TreeNode T2) {
        // write your code here
        if (T1 == null && T2 != null) return false;
        else if (T2 == null) return true;
        if (T1.val == T2.val){
            if (helper(T1, T2) == true) return true; 
        }
        return isSubtree(T1.left, T2) || isSubtree(T1.right, T2);
    }
    public boolean helper(TreeNode T1, TreeNode T2){
        if (T1 == null && T2 == null) return true;
        else if (T1 == null || T2 == null) return false;
        if (T1.val != T2.val) return false;
        return helper(T1.left, T2.left) && helper(T1.right, T2.right);
    }
}
